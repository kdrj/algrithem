nginx工作原理

Nginx模块分为核心模块，基础模块和第三方模块：
  核心模块:http模块,event模块,mail模块
  基础模块:http access模块,http FastCGI模块,Http proxy模块,http rewrite模块。
  第三方模块：Http upstream Request Hash模块,Notice模块,Http access key模块。

性能优势
  web服务器：处理静态文件,索引文件,自动索引效率高。
  代理服务器：快速高效反向代理,提升网站性能。
  负载均衡器：内部支持Rails和PHP,也可支持HTTP代理服务器，对外进行服务。同时支持简单容错和利用算法进行负载均衡。
  性能方面:Nginx专门为性能设计，实现注重效率。采用Poll模型，可以支持更多的并发连接，并在大并发时占用很低内存。
  稳定性方面：采用分阶段资源分配技术，使CPU资源占用率低。
  高可用性方面:支持热备，启动迅速。
























Nginx的location语法
location [=|~|~*|^~] /uri/ { … }
=         严格匹配。如果请求匹配这个location，那么将停止搜索并立即处理此请求
~         区分大小写匹配(可用正则表达式)
~*       不区分大小写匹配(可用正则表达式)
!~       区分大小写不匹配
!~*     不区分大小写不匹配
^~      如果把这个前缀用于一个常规字符串,那么告诉nginx 如果路径匹配那么不测试正则表达式

root    实际访问文件路径会拼接URL中的路径
alias   实际访问文件路径不会拼接URL中的路径

（1）last 和 break 当出现在location 之外时，两者的作用是一致的没有任何差异

（2）last 和 break 当出现在location 内部时：

last        使用了last 指令，rewrite 后会跳出location 作用域，重新开始再走一次刚才的行为
break    使用了break 指令，rewrite后不会跳出location 作用域，它的生命也在这个location中终结

rewrite … permanent   永久性重定向，请求日志中的状态码为301
rewrite … redirect         临时重定向，请求日志中的状态码为302
