Spring AOP的底层实现有两种方式：一种是JDK动态代理，另一种是CGLib的方式。

JDK动态代理：Proxy和InvocationHandler    缺点：只能为接口创建代理实例
CGLib     ：Code Generation Library  可以为一个类创建一个子类，在子类中采用方法拦截的技术拦截所有父类方法的调用并顺势织入横切逻辑。

两者对比：
    JDK动态代理是面向接口的。
    CGLib动态代理是通过字节码底层继承要代理类来实现（如果被代理类被final关键字所修饰，那么抱歉会失败）
    
注意：如果要被代理的对象是个实现类，那么Spring会使用JDK动态代理来完成操作（Spirng默认采用JDK动态代理实现机制）；
      如果要被代理的对象不是个实现类那么，Spring会强制使用CGLib来实现动态代理。
在1.6和1.7的时候，JDK动态代理的速度要比CGLib动态代理的速度要慢，但是并没有教科书上的10倍差距，在JDK1.8的时候，JDK动态代理的速度已经比CGLib
动态代理的速度快很多了。
